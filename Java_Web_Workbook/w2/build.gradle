plugins {
    id 'java'
    id 'war'
}

war {
    duplicatesStrategy = DuplicatesStrategy.INCLUDE
}

group 'org.zerock'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

ext {
    junitVersion = '5.9.2'
}

sourceCompatibility = '11'
targetCompatibility = '11'

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

dependencies {
    compileOnly('jakarta.servlet:jakarta.servlet-api:5.0.0')

    testImplementation("org.junit.jupiter:junit-jupiter-api:${junitVersion}")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:${junitVersion}")

    // https://mvnrepository.com/artifact/org.mariadb.jdbc/mariadb-java-client
    implementation group: 'org.mariadb.jdbc', name: 'mariadb-java-client', version: '3.1.4'

    // https://mvnrepository.com/artifact/org.projectlombok/lombok  //https://projectlombok.org/setup/gradle에서 가져온 코드
    compileOnly group: 'org.projectlombok', name: 'lombok', version: '1.18.24'
    annotationProcessor 'org.projectlombok:lombok:1.18.24'

    //테스트 환경에서도 어노테이션을 처리하는 설정
    testCompileOnly 'org.projectlombok:lombok:1.18.24'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.24'

    implementation group : "com.zaxxer", name : "HikariCP", version : "5.0.0"

    // https://mvnrepository.com/artifact/org.modelmapper/modelmapper
    implementation group: 'org.modelmapper', name: 'modelmapper', version: '3.1.1'


    //log4j2
    implementation 'org.apache.logging.log4j:log4j-api:2.22.1'
    implementation 'org.apache.logging.log4j:log4j-core:2.22.1'
    // https://mvnrepository.com/artifact/org.apache.logging.log4j/log4j-slf4j2-impl
    implementation 'org.apache.logging.log4j:log4j-slf4j2-impl:2.22.1'

//  testImplementation group: 'org.apache.logging.log4j', name: 'log4j-slf4j2-impl', version: '2.22.1'

//  implementation group: 'org.apache.logging.log4j', name: 'log4j-core', version:'2.17.2'
//  implementation group: 'org.apache.logging.log4j', name: 'log4j-api', version:'2.17.2'
//  implementation group: 'org.apache.logging.log4j', name: 'log4j-slf4j-impl', version:'2.17.2'


    //  자카르타는 jstl 사용하려면 아래 코드를 사용해야 함..
    // https://mvnrepository.com/artifact/jakarta.servlet.jsp.jstl/jakarta.servlet.jsp.jstl-api
    implementation group: 'jakarta.servlet.jsp.jstl', name: 'jakarta.servlet.jsp.jstl-api', version: '3.0.0'
    // https://mvnrepository.com/artifact/org.eclipse.jetty/glassfish-jstl
    implementation group: 'org.eclipse.jetty', name: 'glassfish-jstl', version: '11.0.20'

//// https://mvnrepository.com/artifact/javax.servlet/jstl
//  implementation group: 'javax.servlet', name: 'jstl', version: '1.2'



}

test {
    useJUnitPlatform()}
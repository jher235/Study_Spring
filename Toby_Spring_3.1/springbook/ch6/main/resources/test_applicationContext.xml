<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
        http://www.springframework.org/schema/tx
		http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">

    <!--    <bean id="myConnectionMaker" class="springbook.user.dao.MySqlConnectionMaker"/>-->

    <!-- aop 설정 자동화 -->
    <bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" />

<!--    데코레이터-->
<!--    <bean id="userService" class="springbook.user.service.UserServiceTx">-->
<!--    <bean id="userService" class="springbook.user.service.TxProxyFactoryBean">-->
<!--    <bean id="userService" class="org.springframework.aop.framework.ProxyFactoryBean">-->       <!-- 명시적 프록시 패턴 작성 X-->
<!--&lt;!&ndash;        <property name="userService" ref="userServiceImpl"/>&ndash;&gt;-->
<!--        <property name="target" ref="userServiceImpl"/>-->
<!--        <property name="interceptorNames">-->
<!--            <list>-->
<!--                <value>transactionAdvisor</value>-->
<!--            </list>-->
<!--        </property>-->
<!--        <property name="transactionManager" ref="transactionManager"/>-->
<!--        <property name="pattern" value="upgradeLevels"/>-->
<!--        <property name="serviceInterface" value="springbook.user.service.UserService"/>-->

<!--    </bean>-->

<!--    <bean id="transactionAdvice" class="springbook.user.service.TransactionAdvice">-->
<!--        <property name="transactionManager" ref="transactionManager"/>-->
<!--    </bean>-->

<!--    <bean id="transactionPointcut" class="org.springframework.aop.aspectj.AspectJExpressionPointcut">-->
<!--&lt;!&ndash;    <bean id="transactionPointcut" class="springbook.user.service.NameMatchClassMethodPointcut">&ndash;&gt;-->
<!--&lt;!&ndash;    <bean id="transactionPointcut" class="org.springframework.aop.support.NameMatchMethodPointcut">&ndash;&gt;-->
<!--&lt;!&ndash;        <property name="mappedName" value="upgrade*"/>  &lt;!&ndash;   메소드 이름 패턴    &ndash;&gt;&ndash;&gt;-->
<!--&lt;!&ndash;        <property name="mappedClassName" value="*ServiceImpl"/>     &lt;!&ndash;  클래스 이름 패턴 &ndash;&gt;&ndash;&gt;-->
<!--        <property name="expression" value="execution(* *..*ServiceImpl.upgrade*(..))"/>-->
<!--        -->
<!--    </bean>-->

<!--    <aop:config>-->
<!--        <aop:pointcut id="transactionPointcut" expression="execution(* *..*ServiceImpl.upgrade*(..))"/>-->
<!--        <aop:advisor advice-ref="transactionAdvice" pointcut-ref="transactionPointcut"/>-->
<!--    </aop:config>-->


<!--    <bean id="transactionAdvice" class="org.springframework.transaction.interceptor.TransactionInterceptor">-->
<!--        <property name="transactionManager" ref="transactionManager"/>-->
<!--        <property name="transactionAttributes">-->
<!--            <props>-->
<!--                <prop key="get*">PROPAGATION_REQUIRED, readOnly</prop>-->
<!--                <prop key="*">PROPAGATION_REQUIRED</prop>-->
<!--            </props>-->
<!--        </property>-->
<!--    </bean>-->
<!--  빈을 사용하면 아래 코드가 위와 같다.  -->
    <tx:advice id="transactionAdvice">
        <tx:attributes>
            <tx:method name="get*" read-only="true"/><!-- get으로 시작하는 메소드에 대해서 읽기전용 부여 -->
            <tx:method name="*"/> <!-- 모든 타깃 메소드에 기본 트랜잭션 속성 지정 -->
        </tx:attributes>
    </tx:advice>

    <aop:config>
<!--        <aop:advisor advice-ref="transactionAdvice" pointcut="execution(* *..*ServiceImpl.upgrade*(..))"/>-->
        <aop:advisor advice-ref="transactionAdvice" pointcut="bean(*Service)"/>
    </aop:config>




<!--    <bean id="transactionAdvisor" class="org.springframework.aop.support.DefaultPointcutAdvisor">-->
<!--        <property name="advice" ref="transactionAdvice"/>-->
<!--        <property name="pointcut" ref="transactionPointcut"/>-->
<!--    </bean>-->

<!--    타깃-->
    <bean id="userService" class="springbook.user.service.UserServiceImpl">
<!--    <bean id="userServiceImpl" class="springbook.user.service.UserServiceImpl">-->
        <!--        <property name="dataSource" ref="dataSource"/>-->
        <property name="userDao" ref="userDao"/>
        <property name="userLevelUpgradePolicy" ref="userLevelUpgradePolicy"/>
    </bean>

    <bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
        <property name="host" value="mail.server.com"/>
    </bean>

<!--만약 jta로 고치고 싶다면 설정만 class="org.springframework.transaction.jta.JtaTransactionManager" 이렇게 변경하면 된다.-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <bean id="userDao" class="springbook.user.dao.UserDaoJdbc">
        <!--        <property name="connectionMaker" ref="myConnectionMaker"/>-->
        <property name="dataSource" ref="dataSource"/>
<!--        <property name="jdbcContext" ref="jdbcContext"/>-->
    </bean>

    <bean id="userLevelUpgradePolicy" class="springbook.user.service.UserLevelOrdinary"/>


<!--UserServiceTest에서 TestUserServiceImpl을 지정함-->
    <bean id="testUserService" class="springbook.user.service.UserServiceTest$TestUserServiceImpl" parent="userService"/>

<!--    <bean id="jdbcContext" class="springbook.user.dao.JdbcContext">-->
<!--        <property name="dataSource" ref="dataSource"/>-->
<!--    </bean>-->


    <bean id="dataSource" class="org.springframework.jdbc.datasource.SimpleDriverDataSource">
        <property name="driverClass" value="com.mysql.cj.jdbc.Driver"/>     <!-- 스프링이 프로퍼티 값을 적절한 형태인 java.lang.Class 타입으로 만들어줌 -->
        <property name="url" value="jdbc:mysql://localhost/test_tobyspring3_1"/>
        <property name="username" value="root"/>
        <property name="password" value="jher235"/>
    </bean>




</beans>
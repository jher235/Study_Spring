<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
        http://www.springframework.org/schema/tx
		http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">



    <!-- aop 설정 자동화 -->
    <bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" />


    <tx:advice id="transactionAdvice">
        <tx:attributes>
            <tx:method name="get*" read-only="true"/><!-- get으로 시작하는 메소드에 대해서 읽기전용 부여 -->
            <tx:method name="*"/> <!-- 모든 타깃 메소드에 기본 트랜잭션 속성 지정 -->
        </tx:attributes>
    </tx:advice>

    <aop:config>
<!--        <aop:advisor advice-ref="transactionAdvice" pointcut="execution(* *..*ServiceImpl.upgrade*(..))"/>-->
        <aop:advisor advice-ref="transactionAdvice" pointcut="bean(*Service)"/>
    </aop:config>





<!--    타깃-->
    <bean id="userService" class="springbook.user.service.UserServiceImpl">
        <property name="userDao" ref="userDao"/>
        <property name="userLevelUpgradePolicy" ref="userLevelUpgradePolicy"/>
    </bean>

    <bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
        <property name="host" value="mail.server.com"/>
    </bean>

<!--만약 jta로 고치고 싶다면 설정만 class="org.springframework.transaction.jta.JtaTransactionManager" 이렇게 변경하면 된다.-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <bean id="userDao" class="springbook.user.dao.UserDaoJdbc">
        <property name="dataSource" ref="dataSource"/>
       <property name="sqlService" ref="sqlService"/>
<!--        <property name="sqlAdd" value="insert into users(id, name, password,email,level,login,recommend) values(?,?,?,?,?,?,?)"/>-->
    </bean>

<!--    <bean id="sqlService" class="springbook.user.sqlservice.SimpleSqlService">-->
<!--        <property name="sqlMap">-->
<!--            <map>-->
<!--                <entry key="userAdd" value="insert into users(id, name, password,email,level,login,recommend) values(?,?,?,?,?,?,?)"/>-->
<!--                <entry key="userGet" value="select * from users where id = ?" />-->
<!--                <entry key="userGetAll" value="select * from users order by id" />-->
<!--                <entry key="userDeleteAll" value="delete from users" />-->
<!--                <entry key="userGetCount" value="select count(*) from users" />-->
<!--                <entry key="userUpdate" value="update users set name = ?, password = ?, email = ?, level = ?, login = ?, recommend = ? where id = ?"  />-->
<!--            </map>-->
<!--        </property>-->
<!--    </bean>-->
    <bean id="sqlService" class="springbook.user.sqlservice.XmlSqlService"></bean>

    <bean id="userLevelUpgradePolicy" class="springbook.user.service.UserLevelOrdinary"/>


<!--UserServiceTest에서 TestUserServiceImpl을 지정함-->
    <bean id="testUserService" class="springbook.user.service.UserServiceTest$TestUserServiceImpl" parent="userService"/>




    <bean id="dataSource" class="org.springframework.jdbc.datasource.SimpleDriverDataSource">
        <property name="driverClass" value="com.mysql.cj.jdbc.Driver"/>     <!-- 스프링이 프로퍼티 값을 적절한 형태인 java.lang.Class 타입으로 만들어줌 -->
        <property name="url" value="jdbc:mysql://localhost/test_tobyspring3_1"/>
        <property name="username" value="root"/>
        <property name="password" value="jher235"/>
    </bean>




</beans>